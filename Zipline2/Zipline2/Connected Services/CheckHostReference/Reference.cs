//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckHostReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBCheck", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class DBCheck : object
    {
        
        private decimal AmountPaidField;
        
        private decimal ChangeDueField;
        
        private System.Collections.Generic.List<CheckHostReference.GuestComboItem> ComboItemsField;
        
        private System.Collections.Generic.List<CheckHostReference.OrderDiscount> DiscountsField;
        
        private decimal GratuityField;
        
        private System.Collections.Generic.List<decimal> GuestIDsField;
        
        private decimal IDField;
        
        private bool IsPaidForField;
        
        private System.Collections.Generic.List<CheckHostReference.GuestItem> ItemsField;
        
        private System.DateTime LastPaymentDateField;
        
        private string NameField;
        
        private CheckHostReference.DBNotes NotesField;
        
        private decimal OrderTaxField;
        
        private decimal _taxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountPaid
        {
            get
            {
                return this.AmountPaidField;
            }
            set
            {
                this.AmountPaidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChangeDue
        {
            get
            {
                return this.ChangeDueField;
            }
            set
            {
                this.ChangeDueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.GuestComboItem> ComboItems
        {
            get
            {
                return this.ComboItemsField;
            }
            set
            {
                this.ComboItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.OrderDiscount> Discounts
        {
            get
            {
                return this.DiscountsField;
            }
            set
            {
                this.DiscountsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Gratuity
        {
            get
            {
                return this.GratuityField;
            }
            set
            {
                this.GratuityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<decimal> GuestIDs
        {
            get
            {
                return this.GuestIDsField;
            }
            set
            {
                this.GuestIDsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPaidFor
        {
            get
            {
                return this.IsPaidForField;
            }
            set
            {
                this.IsPaidForField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.GuestItem> Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPaymentDate
        {
            get
            {
                return this.LastPaymentDateField;
            }
            set
            {
                this.LastPaymentDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheckHostReference.DBNotes Notes
        {
            get
            {
                return this.NotesField;
            }
            set
            {
                this.NotesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderTax
        {
            get
            {
                return this.OrderTaxField;
            }
            set
            {
                this.OrderTaxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal _tax
        {
            get
            {
                return this._taxField;
            }
            set
            {
                this._taxField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBNotes", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class DBNotes : object
    {
        
        private System.Collections.Generic.List<decimal> IDField;
        
        private System.Collections.Generic.List<string> NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<decimal> ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Notes
        {
            get
            {
                return this.NotesField;
            }
            set
            {
                this.NotesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuestComboItem", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class GuestComboItem : object
    {
        
        private decimal BasePriceField;
        
        private System.Collections.Generic.List<CheckHostReference.GuestItem> ComboGuestItemsField;
        
        private decimal IDField;
        
        private string NameField;
        
        private decimal OrderComboIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BasePrice
        {
            get
            {
                return this.BasePriceField;
            }
            set
            {
                this.BasePriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.GuestItem> ComboGuestItems
        {
            get
            {
                return this.ComboGuestItemsField;
            }
            set
            {
                this.ComboGuestItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderComboID
        {
            get
            {
                return this.OrderComboIDField;
            }
            set
            {
                this.OrderComboIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDiscount", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class OrderDiscount : object
    {
        
        private decimal AmountField;
        
        private decimal CheckIDField;
        
        private System.DateTime DTGField;
        
        private decimal IDField;
        
        private decimal OrderIDField;
        
        private string ReasonField;
        
        private string TypeField;
        
        private decimal UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount
        {
            get
            {
                return this.AmountField;
            }
            set
            {
                this.AmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CheckID
        {
            get
            {
                return this.CheckIDField;
            }
            set
            {
                this.CheckIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DTG
        {
            get
            {
                return this.DTGField;
            }
            set
            {
                this.DTGField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderID
        {
            get
            {
                return this.OrderIDField;
            }
            set
            {
                this.OrderIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason
        {
            get
            {
                return this.ReasonField;
            }
            set
            {
                this.ReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuestItem", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class GuestItem : CheckHostReference.DBItem
    {
        
        private decimal BasePriceField;
        
        private System.Collections.Generic.List<CheckHostReference.GuestModifier> DefaultModifiersField;
        
        private System.Collections.Generic.List<CheckHostReference.GuestModifier> ModsField;
        
        private System.Collections.Generic.List<string> NoteField;
        
        private decimal OrderIDField;
        
        private bool OrderSentField;
        
        private decimal PlateIDField;
        
        private decimal SelectSizeIDField;
        
        private System.Collections.Generic.List<CheckHostReference.GuestModifier> SidesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BasePrice
        {
            get
            {
                return this.BasePriceField;
            }
            set
            {
                this.BasePriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.GuestModifier> DefaultModifiers
        {
            get
            {
                return this.DefaultModifiersField;
            }
            set
            {
                this.DefaultModifiersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.GuestModifier> Mods
        {
            get
            {
                return this.ModsField;
            }
            set
            {
                this.ModsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Note
        {
            get
            {
                return this.NoteField;
            }
            set
            {
                this.NoteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderID
        {
            get
            {
                return this.OrderIDField;
            }
            set
            {
                this.OrderIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderSent
        {
            get
            {
                return this.OrderSentField;
            }
            set
            {
                this.OrderSentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PlateID
        {
            get
            {
                return this.PlateIDField;
            }
            set
            {
                this.PlateIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SelectSizeID
        {
            get
            {
                return this.SelectSizeIDField;
            }
            set
            {
                this.SelectSizeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.GuestModifier> Sides
        {
            get
            {
                return this.SidesField;
            }
            set
            {
                this.SidesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBItem", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckHostReference.GuestItem))]
    public partial class DBItem : object
    {
        
        private bool AvailabilityField;
        
        private bool CanBeHalfField;
        
        private string DescriptionField;
        
        private bool HasAllModsField;
        
        private bool HasRequiredModsField;
        
        private decimal IDField;
        
        private string LongNameField;
        
        private bool NonTaxableField;
        
        private string SelectCommandField;
        
        private string ShortNameField;
        
        private System.Collections.Generic.Dictionary<decimal, CheckHostReference.SizeData> SizeTableField;
        
        private bool StackableField;
        
        private decimal SubCategoryIDField;
        
        private string SubCategoryNameField;
        
        private string SuperCategoryField;
        
        private decimal SuperCategoryIDField;
        
        private System.Collections.Generic.List<CheckHostReference.Tiered> TieredPricingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Availability
        {
            get
            {
                return this.AvailabilityField;
            }
            set
            {
                this.AvailabilityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanBeHalf
        {
            get
            {
                return this.CanBeHalfField;
            }
            set
            {
                this.CanBeHalfField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAllMods
        {
            get
            {
                return this.HasAllModsField;
            }
            set
            {
                this.HasAllModsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasRequiredMods
        {
            get
            {
                return this.HasRequiredModsField;
            }
            set
            {
                this.HasRequiredModsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongName
        {
            get
            {
                return this.LongNameField;
            }
            set
            {
                this.LongNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonTaxable
        {
            get
            {
                return this.NonTaxableField;
            }
            set
            {
                this.NonTaxableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectCommand
        {
            get
            {
                return this.SelectCommandField;
            }
            set
            {
                this.SelectCommandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName
        {
            get
            {
                return this.ShortNameField;
            }
            set
            {
                this.ShortNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<decimal, CheckHostReference.SizeData> SizeTable
        {
            get
            {
                return this.SizeTableField;
            }
            set
            {
                this.SizeTableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Stackable
        {
            get
            {
                return this.StackableField;
            }
            set
            {
                this.StackableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubCategoryID
        {
            get
            {
                return this.SubCategoryIDField;
            }
            set
            {
                this.SubCategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubCategoryName
        {
            get
            {
                return this.SubCategoryNameField;
            }
            set
            {
                this.SubCategoryNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuperCategory
        {
            get
            {
                return this.SuperCategoryField;
            }
            set
            {
                this.SuperCategoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SuperCategoryID
        {
            get
            {
                return this.SuperCategoryIDField;
            }
            set
            {
                this.SuperCategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CheckHostReference.Tiered> TieredPricing
        {
            get
            {
                return this.TieredPricingField;
            }
            set
            {
                this.TieredPricingField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SizeData", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class SizeData : object
    {
        
        private decimal IDField;
        
        private string NameField;
        
        private decimal PriceField;
        
        private string ReceiptNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptName
        {
            get
            {
                return this.ReceiptNameField;
            }
            set
            {
                this.ReceiptNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tiered", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class Tiered : object
    {
        
        private decimal ModifierCountField;
        
        private decimal ModifierTierIDField;
        
        private decimal PriceAdjustmentField;
        
        private decimal SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ModifierCount
        {
            get
            {
                return this.ModifierCountField;
            }
            set
            {
                this.ModifierCountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ModifierTierID
        {
            get
            {
                return this.ModifierTierIDField;
            }
            set
            {
                this.ModifierTierIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceAdjustment
        {
            get
            {
                return this.PriceAdjustmentField;
            }
            set
            {
                this.PriceAdjustmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GuestModifier", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    public partial class GuestModifier : CheckHostReference.DBModifier
    {
        
        private string HalfField;
        
        private decimal MultiplierField;
        
        private bool SpecialCountField;
        
        private string StateField;
        
        private bool isDefaultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Half
        {
            get
            {
                return this.HalfField;
            }
            set
            {
                this.HalfField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Multiplier
        {
            get
            {
                return this.MultiplierField;
            }
            set
            {
                this.MultiplierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SpecialCount
        {
            get
            {
                return this.SpecialCountField;
            }
            set
            {
                this.SpecialCountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isDefault
        {
            get
            {
                return this.isDefaultField;
            }
            set
            {
                this.isDefaultField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBModifier", Namespace="http://schemas.datacontract.org/2004/07/Staunch.POS.Classes")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckHostReference.GuestModifier))]
    public partial class DBModifier : object
    {
        
        private int BaseCountField;
        
        private decimal BasePriceField;
        
        private decimal IDField;
        
        private string NameField;
        
        private decimal PriorityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseCount
        {
            get
            {
                return this.BaseCountField;
            }
            set
            {
                this.BaseCountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BasePrice
        {
            get
            {
                return this.BasePriceField;
            }
            set
            {
                this.BasePriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Priority
        {
            get
            {
                return this.PriorityField;
            }
            set
            {
                this.PriorityField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CheckHostReference.ICheckHost")]
    public interface ICheckHost
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/CreateChecks", ReplyAction="http://tempuri.org/ICheckHost/CreateChecksResponse")]
        System.Threading.Tasks.Task<string> CreateChecksAsync(System.Collections.Generic.List<CheckHostReference.DBCheck> CheckList, decimal UserID, bool forTakeout);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/UpdateCheckNotes", ReplyAction="http://tempuri.org/ICheckHost/UpdateCheckNotesResponse")]
        System.Threading.Tasks.Task UpdateCheckNotesAsync(CheckHostReference.DBNotes Notes, decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/UpdateOrderNotes", ReplyAction="http://tempuri.org/ICheckHost/UpdateOrderNotesResponse")]
        System.Threading.Tasks.Task UpdateOrderNotesAsync(CheckHostReference.DBNotes Notes, decimal OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetOpenChecks", ReplyAction="http://tempuri.org/ICheckHost/GetOpenChecksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CheckHostReference.DBCheck>> GetOpenChecksAsync(decimal TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetChecksForOrder", ReplyAction="http://tempuri.org/ICheckHost/GetChecksForOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<decimal>> GetChecksForOrderAsync(decimal OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetCheckCount", ReplyAction="http://tempuri.org/ICheckHost/GetCheckCountResponse")]
        System.Threading.Tasks.Task<int> GetCheckCountAsync(decimal OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/CombineChecks", ReplyAction="http://tempuri.org/ICheckHost/CombineChecksResponse")]
        System.Threading.Tasks.Task<bool> CombineChecksAsync(decimal CheckID1, decimal CheckID2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/SplitItem", ReplyAction="http://tempuri.org/ICheckHost/SplitItemResponse")]
        System.Threading.Tasks.Task<bool> SplitItemAsync(decimal OrderID, System.Collections.Generic.List<decimal> CheckIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/UpdateChecks", ReplyAction="http://tempuri.org/ICheckHost/UpdateChecksResponse")]
        System.Threading.Tasks.Task<bool> UpdateChecksAsync(System.Collections.Generic.List<CheckHostReference.DBCheck> Checks, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/MoveItems", ReplyAction="http://tempuri.org/ICheckHost/MoveItemsResponse")]
        System.Threading.Tasks.Task<bool> MoveItemsAsync(System.Collections.Generic.Dictionary<decimal, System.Collections.Generic.List<decimal>> Items, decimal newCheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/HasOpenChecks", ReplyAction="http://tempuri.org/ICheckHost/HasOpenChecksResponse")]
        System.Threading.Tasks.Task<bool> HasOpenChecksAsync(decimal TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/AddPayment", ReplyAction="http://tempuri.org/ICheckHost/AddPaymentResponse")]
        System.Threading.Tasks.Task<bool> AddPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/AddGratuity", ReplyAction="http://tempuri.org/ICheckHost/AddGratuityResponse")]
        System.Threading.Tasks.Task<bool> AddGratuityAsync(decimal CheckID, decimal Amount, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/PrintCheckforMoble", ReplyAction="http://tempuri.org/ICheckHost/PrintCheckforMobleResponse")]
        System.Threading.Tasks.Task<bool> PrintCheckforMobleAsync(System.Collections.Generic.List<decimal> CheckIDs, decimal UserID, bool isReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/PrintCheckforRegister", ReplyAction="http://tempuri.org/ICheckHost/PrintCheckforRegisterResponse")]
        System.Threading.Tasks.Task<bool> PrintCheckforRegisterAsync(System.Collections.Generic.List<decimal> CheckIDs, decimal UserID, bool isReceipt, int copies, decimal actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/ClearCheck", ReplyAction="http://tempuri.org/ICheckHost/ClearCheckResponse")]
        System.Threading.Tasks.Task<bool> ClearCheckAsync(decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetCheck", ReplyAction="http://tempuri.org/ICheckHost/GetCheckResponse")]
        System.Threading.Tasks.Task<CheckHostReference.DBCheck> GetCheckAsync(decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/removeOrderFromCheck", ReplyAction="http://tempuri.org/ICheckHost/removeOrderFromCheckResponse")]
        System.Threading.Tasks.Task<bool> removeOrderFromCheckAsync(decimal OrderID, decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/Ping", ReplyAction="http://tempuri.org/ICheckHost/PingResponse")]
        System.Threading.Tasks.Task<int> PingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/OpenDrawer", ReplyAction="http://tempuri.org/ICheckHost/OpenDrawerResponse")]
        System.Threading.Tasks.Task<string> OpenDrawerAsync(decimal actionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetCashDrawerPort", ReplyAction="http://tempuri.org/ICheckHost/GetCashDrawerPortResponse")]
        System.Threading.Tasks.Task<string> GetCashDrawerPortAsync(decimal ActionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetGrossSalesForToday", ReplyAction="http://tempuri.org/ICheckHost/GetGrossSalesForTodayResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> GetGrossSalesForTodayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetGrossSalesFor", ReplyAction="http://tempuri.org/ICheckHost/GetGrossSalesForResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> GetGrossSalesForAsync(System.DateTime Start, System.DateTime End);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetTaxFor", ReplyAction="http://tempuri.org/ICheckHost/GetTaxForResponse")]
        System.Threading.Tasks.Task<decimal> GetTaxForAsync(System.DateTime Start, System.DateTime End);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetTaxForToday", ReplyAction="http://tempuri.org/ICheckHost/GetTaxForTodayResponse")]
        System.Threading.Tasks.Task<decimal> GetTaxForTodayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetGratuityFor", ReplyAction="http://tempuri.org/ICheckHost/GetGratuityForResponse")]
        System.Threading.Tasks.Task<decimal> GetGratuityForAsync(System.DateTime Start, System.DateTime End);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetGratuityForToday", ReplyAction="http://tempuri.org/ICheckHost/GetGratuityForTodayResponse")]
        System.Threading.Tasks.Task<decimal> GetGratuityForTodayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetDiscountsFor", ReplyAction="http://tempuri.org/ICheckHost/GetDiscountsForResponse")]
        System.Threading.Tasks.Task<decimal> GetDiscountsForAsync(System.DateTime Start, System.DateTime End);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetChecksWithPayments", ReplyAction="http://tempuri.org/ICheckHost/GetChecksWithPaymentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CheckHostReference.DBCheck>> GetChecksWithPaymentsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/PrintZReport", ReplyAction="http://tempuri.org/ICheckHost/PrintZReportResponse")]
        System.Threading.Tasks.Task<string> PrintZReportAsync(decimal UserID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetSalesReport", ReplyAction="http://tempuri.org/ICheckHost/GetSalesReportResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> GetSalesReportAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/PrintSalesReport", ReplyAction="http://tempuri.org/ICheckHost/PrintSalesReportResponse")]
        System.Threading.Tasks.Task<string> PrintSalesReportAsync(decimal UserID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/ReopenCheck", ReplyAction="http://tempuri.org/ICheckHost/ReopenCheckResponse")]
        System.Threading.Tasks.Task<bool> ReopenCheckAsync(decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/DeleteCheck", ReplyAction="http://tempuri.org/ICheckHost/DeleteCheckResponse")]
        System.Threading.Tasks.Task<string> DeleteCheckAsync(CheckHostReference.DBCheck CheckToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/RemoveOrderFromClosedCheck", ReplyAction="http://tempuri.org/ICheckHost/RemoveOrderFromClosedCheckResponse")]
        System.Threading.Tasks.Task<bool> RemoveOrderFromClosedCheckAsync(decimal OrderID, decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/MoveCheck", ReplyAction="http://tempuri.org/ICheckHost/MoveCheckResponse")]
        System.Threading.Tasks.Task<bool> MoveCheckAsync(decimal CheckID, decimal NewTableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/ExportReports", ReplyAction="http://tempuri.org/ICheckHost/ExportReportsResponse")]
        System.Threading.Tasks.Task ExportReportsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/UpdateTakeoutCheck", ReplyAction="http://tempuri.org/ICheckHost/UpdateTakeoutCheckResponse")]
        System.Threading.Tasks.Task<bool> UpdateTakeoutCheckAsync(CheckHostReference.DBCheck check, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/UpdateCheckDiscounts", ReplyAction="http://tempuri.org/ICheckHost/UpdateCheckDiscountsResponse")]
        System.Threading.Tasks.Task<string> UpdateCheckDiscountsAsync(System.Collections.Generic.List<CheckHostReference.OrderDiscount> discounts, bool taxable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/Checkout", ReplyAction="http://tempuri.org/ICheckHost/CheckoutResponse")]
        System.Threading.Tasks.Task<string> CheckoutAsync(decimal checkId, System.Collections.Generic.List<decimal> guestIds, decimal tableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetReportForDates", ReplyAction="http://tempuri.org/ICheckHost/GetReportForDatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> GetReportForDatesAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/RemoveTax", ReplyAction="http://tempuri.org/ICheckHost/RemoveTaxResponse")]
        System.Threading.Tasks.Task<string> RemoveTaxAsync(decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/CreateLSEChecks", ReplyAction="http://tempuri.org/ICheckHost/CreateLSEChecksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<decimal>> CreateLSEChecksAsync(System.Collections.Generic.List<CheckHostReference.DBCheck> CheckList, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/AddLSEPayment", ReplyAction="http://tempuri.org/ICheckHost/AddLSEPaymentResponse")]
        System.Threading.Tasks.Task<bool> AddLSEPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetLSEReportForDates", ReplyAction="http://tempuri.org/ICheckHost/GetLSEReportForDatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> GetLSEReportForDatesAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetLSEChecksWithPayments", ReplyAction="http://tempuri.org/ICheckHost/GetLSEChecksWithPaymentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<CheckHostReference.DBCheck>> GetLSEChecksWithPaymentsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/UpdateCheckOrderItem", ReplyAction="http://tempuri.org/ICheckHost/UpdateCheckOrderItemResponse")]
        System.Threading.Tasks.Task<string> UpdateCheckOrderItemAsync(CheckHostReference.GuestItem order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/InsertVoid", ReplyAction="http://tempuri.org/ICheckHost/InsertVoidResponse")]
        System.Threading.Tasks.Task<string> InsertVoidAsync(decimal checkID, string user, string manager, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/GetVoidsForDates", ReplyAction="http://tempuri.org/ICheckHost/GetVoidsForDatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetVoidsForDatesAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/AddCreditPayment", ReplyAction="http://tempuri.org/ICheckHost/AddCreditPaymentResponse")]
        System.Threading.Tasks.Task<string> AddCreditPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/PrintCateringReceipt", ReplyAction="http://tempuri.org/ICheckHost/PrintCateringReceiptResponse")]
        System.Threading.Tasks.Task PrintCateringReceiptAsync(int CateringID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/ClearDiscounts", ReplyAction="http://tempuri.org/ICheckHost/ClearDiscountsResponse")]
        System.Threading.Tasks.Task<bool> ClearDiscountsAsync(decimal CheckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICheckHost/AddCateringPayment", ReplyAction="http://tempuri.org/ICheckHost/AddCateringPaymentResponse")]
        System.Threading.Tasks.Task<bool> AddCateringPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface ICheckHostChannel : CheckHostReference.ICheckHost, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class CheckHostClient : System.ServiceModel.ClientBase<CheckHostReference.ICheckHost>, CheckHostReference.ICheckHost
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CheckHostClient() : 
                base(CheckHostClient.GetDefaultBinding(), CheckHostClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICheckHost.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CheckHostClient(EndpointConfiguration endpointConfiguration) : 
                base(CheckHostClient.GetBindingForEndpoint(endpointConfiguration), CheckHostClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CheckHostClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CheckHostClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CheckHostClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CheckHostClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CheckHostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> CreateChecksAsync(System.Collections.Generic.List<CheckHostReference.DBCheck> CheckList, decimal UserID, bool forTakeout)
        {
            return base.Channel.CreateChecksAsync(CheckList, UserID, forTakeout);
        }
        
        public System.Threading.Tasks.Task UpdateCheckNotesAsync(CheckHostReference.DBNotes Notes, decimal CheckID)
        {
            return base.Channel.UpdateCheckNotesAsync(Notes, CheckID);
        }
        
        public System.Threading.Tasks.Task UpdateOrderNotesAsync(CheckHostReference.DBNotes Notes, decimal OrderID)
        {
            return base.Channel.UpdateOrderNotesAsync(Notes, OrderID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CheckHostReference.DBCheck>> GetOpenChecksAsync(decimal TableID)
        {
            return base.Channel.GetOpenChecksAsync(TableID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<decimal>> GetChecksForOrderAsync(decimal OrderID)
        {
            return base.Channel.GetChecksForOrderAsync(OrderID);
        }
        
        public System.Threading.Tasks.Task<int> GetCheckCountAsync(decimal OrderID)
        {
            return base.Channel.GetCheckCountAsync(OrderID);
        }
        
        public System.Threading.Tasks.Task<bool> CombineChecksAsync(decimal CheckID1, decimal CheckID2)
        {
            return base.Channel.CombineChecksAsync(CheckID1, CheckID2);
        }
        
        public System.Threading.Tasks.Task<bool> SplitItemAsync(decimal OrderID, System.Collections.Generic.List<decimal> CheckIDs)
        {
            return base.Channel.SplitItemAsync(OrderID, CheckIDs);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateChecksAsync(System.Collections.Generic.List<CheckHostReference.DBCheck> Checks, decimal UserID)
        {
            return base.Channel.UpdateChecksAsync(Checks, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> MoveItemsAsync(System.Collections.Generic.Dictionary<decimal, System.Collections.Generic.List<decimal>> Items, decimal newCheckID)
        {
            return base.Channel.MoveItemsAsync(Items, newCheckID);
        }
        
        public System.Threading.Tasks.Task<bool> HasOpenChecksAsync(decimal TableID)
        {
            return base.Channel.HasOpenChecksAsync(TableID);
        }
        
        public System.Threading.Tasks.Task<bool> AddPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID)
        {
            return base.Channel.AddPaymentAsync(CheckID, PaymentOption, Amount, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> AddGratuityAsync(decimal CheckID, decimal Amount, decimal UserID)
        {
            return base.Channel.AddGratuityAsync(CheckID, Amount, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> PrintCheckforMobleAsync(System.Collections.Generic.List<decimal> CheckIDs, decimal UserID, bool isReceipt)
        {
            return base.Channel.PrintCheckforMobleAsync(CheckIDs, UserID, isReceipt);
        }
        
        public System.Threading.Tasks.Task<bool> PrintCheckforRegisterAsync(System.Collections.Generic.List<decimal> CheckIDs, decimal UserID, bool isReceipt, int copies, decimal actionID)
        {
            return base.Channel.PrintCheckforRegisterAsync(CheckIDs, UserID, isReceipt, copies, actionID);
        }
        
        public System.Threading.Tasks.Task<bool> ClearCheckAsync(decimal CheckID)
        {
            return base.Channel.ClearCheckAsync(CheckID);
        }
        
        public System.Threading.Tasks.Task<CheckHostReference.DBCheck> GetCheckAsync(decimal CheckID)
        {
            return base.Channel.GetCheckAsync(CheckID);
        }
        
        public System.Threading.Tasks.Task<bool> removeOrderFromCheckAsync(decimal OrderID, decimal CheckID)
        {
            return base.Channel.removeOrderFromCheckAsync(OrderID, CheckID);
        }
        
        public System.Threading.Tasks.Task<int> PingAsync()
        {
            return base.Channel.PingAsync();
        }
        
        public System.Threading.Tasks.Task<string> OpenDrawerAsync(decimal actionID)
        {
            return base.Channel.OpenDrawerAsync(actionID);
        }
        
        public System.Threading.Tasks.Task<string> GetCashDrawerPortAsync(decimal ActionID)
        {
            return base.Channel.GetCashDrawerPortAsync(ActionID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> GetGrossSalesForTodayAsync()
        {
            return base.Channel.GetGrossSalesForTodayAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> GetGrossSalesForAsync(System.DateTime Start, System.DateTime End)
        {
            return base.Channel.GetGrossSalesForAsync(Start, End);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTaxForAsync(System.DateTime Start, System.DateTime End)
        {
            return base.Channel.GetTaxForAsync(Start, End);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTaxForTodayAsync()
        {
            return base.Channel.GetTaxForTodayAsync();
        }
        
        public System.Threading.Tasks.Task<decimal> GetGratuityForAsync(System.DateTime Start, System.DateTime End)
        {
            return base.Channel.GetGratuityForAsync(Start, End);
        }
        
        public System.Threading.Tasks.Task<decimal> GetGratuityForTodayAsync()
        {
            return base.Channel.GetGratuityForTodayAsync();
        }
        
        public System.Threading.Tasks.Task<decimal> GetDiscountsForAsync(System.DateTime Start, System.DateTime End)
        {
            return base.Channel.GetDiscountsForAsync(Start, End);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CheckHostReference.DBCheck>> GetChecksWithPaymentsAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.GetChecksWithPaymentsAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<string> PrintZReportAsync(decimal UserID, System.DateTime start, System.DateTime end)
        {
            return base.Channel.PrintZReportAsync(UserID, start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> GetSalesReportAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.GetSalesReportAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<string> PrintSalesReportAsync(decimal UserID, System.DateTime start, System.DateTime end)
        {
            return base.Channel.PrintSalesReportAsync(UserID, start, end);
        }
        
        public System.Threading.Tasks.Task<bool> ReopenCheckAsync(decimal CheckID)
        {
            return base.Channel.ReopenCheckAsync(CheckID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCheckAsync(CheckHostReference.DBCheck CheckToDelete)
        {
            return base.Channel.DeleteCheckAsync(CheckToDelete);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveOrderFromClosedCheckAsync(decimal OrderID, decimal CheckID)
        {
            return base.Channel.RemoveOrderFromClosedCheckAsync(OrderID, CheckID);
        }
        
        public System.Threading.Tasks.Task<bool> MoveCheckAsync(decimal CheckID, decimal NewTableID)
        {
            return base.Channel.MoveCheckAsync(CheckID, NewTableID);
        }
        
        public System.Threading.Tasks.Task ExportReportsAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.ExportReportsAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTakeoutCheckAsync(CheckHostReference.DBCheck check, decimal UserID)
        {
            return base.Channel.UpdateTakeoutCheckAsync(check, UserID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCheckDiscountsAsync(System.Collections.Generic.List<CheckHostReference.OrderDiscount> discounts, bool taxable)
        {
            return base.Channel.UpdateCheckDiscountsAsync(discounts, taxable);
        }
        
        public System.Threading.Tasks.Task<string> CheckoutAsync(decimal checkId, System.Collections.Generic.List<decimal> guestIds, decimal tableId)
        {
            return base.Channel.CheckoutAsync(checkId, guestIds, tableId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> GetReportForDatesAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.GetReportForDatesAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<string> RemoveTaxAsync(decimal CheckID)
        {
            return base.Channel.RemoveTaxAsync(CheckID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<decimal>> CreateLSEChecksAsync(System.Collections.Generic.List<CheckHostReference.DBCheck> CheckList, decimal UserID)
        {
            return base.Channel.CreateLSEChecksAsync(CheckList, UserID);
        }
        
        public System.Threading.Tasks.Task<bool> AddLSEPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID)
        {
            return base.Channel.AddLSEPaymentAsync(CheckID, PaymentOption, Amount, UserID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<string>>> GetLSEReportForDatesAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.GetLSEReportForDatesAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<CheckHostReference.DBCheck>> GetLSEChecksWithPaymentsAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.GetLSEChecksWithPaymentsAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCheckOrderItemAsync(CheckHostReference.GuestItem order)
        {
            return base.Channel.UpdateCheckOrderItemAsync(order);
        }
        
        public System.Threading.Tasks.Task<string> InsertVoidAsync(decimal checkID, string user, string manager, string reason)
        {
            return base.Channel.InsertVoidAsync(checkID, user, manager, reason);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetVoidsForDatesAsync(System.DateTime start, System.DateTime end)
        {
            return base.Channel.GetVoidsForDatesAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<string> AddCreditPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID)
        {
            return base.Channel.AddCreditPaymentAsync(CheckID, PaymentOption, Amount, UserID);
        }
        
        public System.Threading.Tasks.Task PrintCateringReceiptAsync(int CateringID)
        {
            return base.Channel.PrintCateringReceiptAsync(CateringID);
        }
        
        public System.Threading.Tasks.Task<bool> ClearDiscountsAsync(decimal CheckID)
        {
            return base.Channel.ClearDiscountsAsync(CheckID);
        }
        
        public System.Threading.Tasks.Task<bool> AddCateringPaymentAsync(decimal CheckID, string PaymentOption, decimal Amount, decimal UserID)
        {
            return base.Channel.AddCateringPaymentAsync(CheckID, PaymentOption, Amount, UserID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICheckHost))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICheckHost))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/CheckHost/CheckHost.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CheckHostClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICheckHost);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CheckHostClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICheckHost);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ICheckHost,
        }
    }
}
