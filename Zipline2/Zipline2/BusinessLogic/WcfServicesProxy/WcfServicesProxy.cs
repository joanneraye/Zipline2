using System;
using System.Collections.Generic;
using System.Text;
using System.ServiceModel;
using CheckHostReference;
using PosServiceReference;
using System.Threading.Tasks;

namespace Zipline2.BusinessLogic
{
    public class WcfServicesProxy
    {
        //The current Windows Phone app has a Service Reference folder with references
        //to the services.  When the services are added, the classes with references
        //are autogenerated. Then the phone app just has the following:

        private PosServiceClient waiterClient;
        private CheckHostClient checkClient;

        public WcfServicesProxy()
        {
            try
            {
               waiterClient = new PosServiceClient(
               new BasicHttpBinding(),
               new EndpointAddress("http://192.168.1.26/WP7Waiter/POServiceHost.svc"));
                
                checkClient = new CheckHostClient(
                    new BasicHttpBinding(),
                    new EndpointAddress("http://192.168.1.26/CheckHost/CheckHost.svc"));
            }
           
             catch (Exception ex)
            {
                var errorMessage = ex;                
                throw;
            }
            //http://localhost/WP7Waiter
            //http://localhost/WaiterHost
            //http://localhost/POServiceHost.svc
            //http://localhost/WP7Waiter/POServiceHost.svc
            //http://localhost:8000/POServiceHost.svc
            //http://localhost:8000/WP7Waiter/POServiceHost.svc
            //http://localhost:8000/WP7Waiter
            //http://localhost:8000/POServiceHost
            //http://localhost:8000/POServiceHost.svc?wsdl

        }

        public async Task<PosServiceReference.DBTable> GetTableAsync()
        {
            PosServiceReference.DBTable table;
            try
            {
                table = await waiterClient.GetTableAsync(1);
            }
            catch (Exception ex)
            {
                var errormessage = ex;
                throw;
            }
            var limit = await waiterClient.GetGratuityLimitAsync();
            var whatever = await waiterClient.GetTableInfoAsync();
            

            return table;
        }

        public void CloseWaiterService()
        {
            waiterClient.CloseAsync();
        }


        public async Task<Dictionary<string, List<PosServiceReference.DBItem>>> GetMenuAsync()
        {
            var tableDictionary = await waiterClient.GetMenuAsync();

            //The following returned null....
            //var table = await waiterClient.GetTableAsync(5);
            return tableDictionary;
        }


        //See field DefaultBinding in Windows Phone App.
        //Don't seem to be using though....?
        //BasicHttpBinding bhttpb = new BasicHttpBinding();
        //{
        //    Security = new BasicHttpSecurity()
        //    {
        //        Mode = BasicHttpSecurityMode.None,
        //        Transport = new HttpTransportSecurity()
        //        {
        //            ProxyCredentialType = HttpProxyCredentialType.None,
        //            ClientCredentialType = HttpClientCredentialType.None
        //        }
        //    },
        //    BypassProxyOnLocal = true
        //};
        //whatever = new SomethingServiceClient(bhttpb, whoknows);

        //async void DoStuff()
        //{
        //    //dblResult = await Task.Run<double>(delegate { return whatever.Add(dblX, dblY); });
        //}


    }
}
